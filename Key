--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v63=0;local v64;while true do if (0==v63) then v64=v2(v0(v29,16));if v18 then local v76=v5(v64,v18);v18=nil;return v76;else return v64;end break;end end end end);local function v19(v30,v31,v32)if v32 then local v65=0 -0;local v66;while true do if (v65==(0 -0)) then v66=(v30/((3 -1)^(v31-(137 -(50 + 86)))))%((2 + 0)^(((v32-(2 -(1 + 0))) -(v31-(1 + 0))) + (1 -0)));return v66-(v66%(3 -2));end end else local v67=688 -(527 + 161);local v68;while true do if ((0 -0)==v67) then v68=(609 -(23 + 584))^(v31-(1 + 0));return (((v30%(v68 + v68))>=v68) and (322 -(66 + 255))) or ((0 + 0) -(1304 -(107 + 1197)));end end end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38,v39=v1(v15,v17,v17 + 1 + 1);v17=v17 + (1483 -(594 + 887));return (v39 * (35 + 221)) + v38;end local function v22()local v40,v41,v42,v43=v1(v15,v17,v17 + (1601 -(855 + 743)));v17=v17 + 1 + 3;return (v43 * (3652445 + 8637080 + 4487691)) + (v42 * (66430 -(498 + (715 -319)))) + (v41 * (95 + 161)) + v40;end local function v23()local v44=0 + 0;local v45;local v46;while true do if (((2383 -(453 + 32)) -((168 -110) + 1840))==v44) then v45=v22();v46=v22();v44=1 + 0;end if (v44==(2 -(1 + 0))) then return (( -(1 + 1) * v19(v46,(45 -27) + 14)) + (2 -1)) * ((3 -1)^(v19(v46,527 -(131 + 375),1596 -(492 + 1073)) -(703 + 70 + 250))) * ((((v19(v46,1473 -(81 + 1391),1688 -(349 + 1319)) * ((925 -(883 + 40))^((208 -142) -(88 -54)))) + v45)/((1687 -(129 + 1556))^(2051 -(876 + 1123)))) + 1 + 0);end end end local function v24(v33)local v47;if  not v33 then v33=v22();if (v33==(0 -0)) then return "";end end v47=v3(v15,v17,(v17 + v33) -(1 -0));v17=v17 + v33;local v48={};for v61=1, #v47 do v48[v61]=v2(v1(v3(v47,v61,v61)));end return v6(v48);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v49=0;local v50;local v51;local v52;local v53;local v54;local v55;local v56;while true do if ((10 -7)==v49) then v56=nil;while true do local v70=0;while true do if (v70==0) then if (v50==0) then local v94=418 -(99 + 319);local v95;while true do if (v94~=(449 -(82 + 367))) then else v95=0 -0;while true do if (v95~=(198 -(14 + 184))) then else local v114=1061 -(530 + 531);while true do if (v114==(1 -0)) then v95=1;break;end if (v114~=(0 + 0)) then else v51={};v52={};v114=1 + 0;end end end if (v95~=(189 -(4 + 184))) then else v53={};v50=1 + 0;break;end end break;end end end if ((6 -4)==v50) then local v96=0 -0;while true do if (v96==1) then for v105=1,v22() do local v106=0 -0;local v107;local v108;while true do if (v106==(1 + 0)) then while true do if (v107==0) then v108=v20();if (v19(v108,1 -0,1)~=(0 -0)) then else local v120=0 -0;local v121;local v122;local v123;local v124;while true do if (v120~=(1 -0)) then else v123=nil;v124=nil;v120=1537 -(380 + 1155);end if (v120~=(0 + 0)) then else local v126=0 -0;while true do if (v126==1) then v120=1;break;end if (v126~=(0 + 0)) then else v121=0 + 0;v122=nil;v126=1;end end end if (v120==2) then while true do if ((0 -0)~=v121) then else v122=v19(v108,1671 -(971 + 698),3);v123=v19(v108,1298 -(518 + 776),276 -(110 + 160));v121=1350 -(187 + 1162);end if (v121~=(1 + 1)) then else local v146=0;local v147;while true do if (v146==0) then v147=0 + 0;while true do if (v147~=(1131 -(645 + 486))) then else if (v19(v123,1 + 0,2 -1)==(775 -(41 + 733))) then v124[1 + 1]=v56[v124[206 -(170 + 34)]];end if (v19(v123,2 + 0,2 + 0)~=1) then else v124[1886 -(342 + 1541)]=v56[v124[1159 -(490 + 666)]];end v147=1 -0;end if (v147==(1 + 0)) then v121=3 + 0;break;end end break;end end end if (v121==(11 -8)) then if (v19(v123,8 -5,3)~=(1 + 0)) then else v124[1 + 3]=v56[v124[10 -6]];end v51[v105]=v124;break;end if (1==v121) then local v149=1981 -(760 + 1221);while true do if (v149==(939 -(626 + 313))) then v124={v21(),v21(),nil,nil};if (v122==(0 + 0)) then local v174=0;local v175;while true do if ((0 -0)~=v174) then else v175=981 -(355 + 626);while true do if (v175~=(0 + 0)) then else v124[3]=v21();v124[14 -10]=v21();break;end end break;end end elseif (v122==1) then v124[2 + 1]=v22();elseif (v122==(1226 -(989 + 235))) then v124[1 + 2]=v22() -((2 -0)^(1054 -(451 + 587)));elseif (v122~=(10 -7)) then else local v208=0 -0;while true do if (v208==(0 -0)) then v124[3 + 0]=v22() -((399 -(210 + 187))^16);v124[4]=v21();break;end end end v149=1;end if (v149~=(1 + 0)) then else v121=1 + 1;break;end end end end break;end end end break;end end break;end if (v106~=(1162 -(814 + 348))) then else v107=0 -0;v108=nil;v106=1 -0;end end end v50=821 -(395 + 423);break;end if (v96==(0 + 0)) then for v109=1 + 0,v55 do local v110=0 + 0;local v111;local v112;local v113;while true do if (v110==(0 + 0)) then v111=0;v112=nil;v110=221 -(34 + 186);end if (v110~=(1963 -(1671 + 291))) then else v113=nil;while true do if (v111~=(0 + 0)) then else local v117=0 + 0;local v118;while true do if (0==v117) then v118=1559 -(1492 + 67);while true do if ((382 -(95 + 286))==v118) then v111=447 -(45 + 401);break;end if (v118~=(1763 -(1100 + 663))) then else local v127=0 + 0;while true do if (v127==0) then v112=v20();v113=nil;v127=2 -1;end if (v127~=1) then else v118=2 -1;break;end end end end break;end end end if (1==v111) then if (v112==(1 + 0)) then v113=v20()~=(0 + 0);elseif (v112==(1 + 1)) then v113=v23();elseif (v112==(1785 -(196 + 1586))) then v113=v24();end v56[v109]=v113;break;end end break;end end end v54[3]=v20();v96=1;end end end v70=1;end if (v70~=(1222 -(281 + 940))) then else if (v50~=3) then else for v98=282 -(68 + 213),v22() do v52[v98-1]=v27();end for v100=1 + 0,v22() do v53[v100]=v22();end return v54;end if (v50~=(82 -(28 + 53))) then else local v97=0 -0;while true do if (v97~=(1 + 0)) then else v56={};v50=2 + 0;break;end if (v97~=(0 -0)) then else v54={v51,v52,nil,v53};v55=v22();v97=1 + 0;end end end break;end end end break;end if ((1163 -(226 + 936))==v49) then local v69=0;while true do if (v69~=(640 -(402 + 238))) then else v52=nil;v53=nil;v69=1;end if (v69~=1) then else v49=2;break;end end end if (0~=v49) then else v50=1059 -(283 + 776);v51=nil;v49=1 + 0;end if (v49==(400 -(113 + 285))) then v54=nil;v55=nil;v49=1969 -(723 + 1243);end end end local function v28(v34,v35,v36)local v57=0;local v58;local v59;local v60;while true do if (v57==0) then v58=v34[1];v59=v34[2];v57=1;end if (v57==1) then v60=v34[3];return function(...)local v71=1;local v72= -1;local v73={...};local v74=v11("#",...) -1;local function v75()local v77=v58;local v78=Const;local v79=v59;local v80=v60;local v81=v26;local v82={};local v83={};local v84={};for v90=0,v74 do if ((v90>=v80) or ((2672 -(218 + 92))>=(4033 + 327))) then v82[v90-v80]=v73[v90 + 1 + 0];else v84[v90]=v73[v90 + 1 + (0 -0)];end end local v85=(v74-v80) + 1;local v86;local v87;while true do local v91=0;local v92;local v93;while true do if ((v91==(658 -(4 + 653))) or ((2318 -(55 + 154))>(4 + 50 + 2181))) then while true do if ((v92==0) or ((11421 -7136)<(1062 -711))) then v93=0 -0;while true do if (((9298 -5268)>=(1860 -(304 + 651))) and (v93==0)) then local v115=0 -(233 -(8 + 225));local v116;while true do if (((0 + 0)==v115) or (3800<=(1655 + 891))) then v116=0 + 0;while true do if (((5145 -(408 + 179))==(1100 + 3458)) and (1==v116)) then v93=1;break;end if (((390 + 430)==(1182 -(258 + 104))) and (v116==(0 -0))) then local v125=1771 -(1770 + 1);while true do if ((v125==0) or ((232 + 143)>(3215 -1574))) then v86=v77[v71];v87=v86[3 -2];v125=(2 -0) -1;end if ((v125==(451 -(115 + (837 -502)))) or (3681<(444 + 827))) then v116=1 -0;break;end end end end break;end end end if ((306>(912 -(667 + 74))) and ((1 -0)==v93)) then if (((139 + 1766)<=(2192 + 862)) and (v87<=9)) then if ((v87<=(265 -(155 + 106))) or ((3519 -1431)<=(9 + 106))) then if (((1270 -(34 + 38))>(373 -191)) and (v87<=(3 -2))) then if (((2327 -1282)==(831 + 214)) and (v87==(0 -0))) then local v128=0 -0;local v129;local v130;local v131;while true do if (((4224 -(253 + 1369))>(802 -(10 + 381))) and (v128==(1 + 0))) then v131=nil;while true do if (((5522 -(188 + 1063))>(3431 -(208 + 63))) and (v129==((1745 -(1192 + 552)) -0))) then for v176=2 -1, #v83 do local v177=0 -0;local v178;local v179;local v180;while true do if (((1757 + 1081)<(1088 + 2920)) and (v177==(0 -0))) then v178=0 -0;v179=nil;v177=2 -(777 -(81 + 695));end if ((1157<1170) and (v177==(1 + (0 -0)))) then v180=nil;while true do if (((1 + 0)==v178) or ((674 + 32)>(5464 -(1271 + 657)))) then while true do if (((0 -0)==v179) or ((11253 -6922)<(1422 + 6))) then v180=v83[v176];for v214=0, #v180 do local v215=602 -(556 + 46);local v216;local v217;local v218;local v219;while true do if (((1037 -(18 + 148))<(1613 + 2332)) and (v215==(2 + 0))) then while true do if ((v216==(0 -0)) or ((1301 + 997)>=((10524 -3828) -2810))) then local v221=1716 -(1046 + 670);while true do if (((1383 -649)<=(3946 -(63 + 431))) and (v221==(0 + 0 + 0))) then v217=v180[v214];v218=v217[1];v221=1556 -(1075 + 480);end if (((4523 -1906)==2617) and (v221==1)) then v216=1 + 0;break;end end end if (((4350 -913)>(10604 -8255)) and (v216==((2 + 1) -2))) then v219=v217[2 + 0];if (((v218==v84) and (v219>=v130)) or ((5820 -2073)<(477 -282))) then local v222=0;local v223;while true do if ((v222==(0 + 0)) or (3767==(1876 -((1571 -(469 + 1034)) + 226)))) then v223=0 + 0;while true do if ((2492>((498 -377) + 245)) and (v223==(0 + 0))) then v131[v219]=v218[v219];v217[(929 -(146 + 118)) -(25 + 639)]=v131;break;end end break;end end end break;end end break;end if ((((3939 -(1131 + 118)) -1560)>=(1794 -(257 + 947))) and (1==v215)) then v218=nil;v219=nil;v215=2 + 0;end if (((1254 -(9 + 46))<(3266 -(324 + 1177))) and (v215==(1863 -(141 + 1722)))) then v216=0 + 0;v217=nil;v215=1792 -(1447 + 344);end end end break;end end break;end if (((2716 -1681)<=(7267 -4107)) and (v178==(0 + 0))) then local v209=1875 -(1628 + 247);while true do if (((0 + 0)==v209) or (511==(4738 -3331))) then v179=737 -(628 + 109);v180=nil;v209=1;end if (((4564 -(90 + 218))>=(2434 -(1029 + 133))) and ((1 + 0)==v209)) then v178=1 -0;break;end end end end break;end end end break;end if ((v129==(0 + 0)) or (3942<(825 + 478))) then local v173=0 + (875 -(419 + 456));while true do if ((v173==0) or ((5397 -1810)==2223)) then v130=v86[2 + 0];v131={};v173=(251 -(51 + 158)) -(19 + 22);end if (((1656 -(2022 -1099))<(8787 -5044)) and (v173==(1 + 0))) then v129=1 + 0;break;end end end end break;end if (((0 + 0 + 0)==v128) or ((1430 -(957 + 297))>(139 + 275))) then v129=0 + (682 -(222 + 460));v130=nil;v128=(1953 -(1332 + 618)) -2;end end else v84[v86[2]]=v35[v86[3]];end elseif ((v87<=(1056 -(678 + 376))) or ((281 + (5300 -(817 + 130)))<=(46 + 3550))) then v84[v86[550 -((1926 -(678 + 878)) + 178)]]();elseif (((2849 -(593 + 1351))==((404 -319) + 820)) and (v87==(2 + (1 -0)))) then v84[v86[(4 -3) + 1]]=v28(v79[v86[7 -4]],nil,v36);else v84[v86[2]]=v86[7 -4]~=(0 -0);end elseif (((63 + 450)<(1596 + 929)) and (v87<=(408 -(34 + 368)))) then if ((v87==(2 + (8 -5))) or ((1092 -(45 + 905))>=(1933 + (2735 -(21 + 44))))) then if (((2737 -1659)<=(2792 + 1965)) and (v86[120 -(15 + 103)]==v84[v86[4]])) then v71=v71 + ((7 -4) -2);else v71=v86[2 + (1153 -(894 + 258))];end else do return;end end elseif ((v87<=(5 + 2)) or (((10078 + 4219) -10117)<(3918 -(683 + 168)))) then local v133=1402 -(885 + 517);local v134;local v135;local v136;while true do if (((7719 -3346)<4661) and (v133==(0 -0))) then v134=938 -(757 + 181);v135=nil;v133=1898 -(1066 + 831);end if (((6372 -3966)>=(703 + 1509)) and (v133==(1 + 0))) then v136=nil;while true do if (((1151 -(385 + 765))==v134) or ((3328 -((3031 -(844 + 1055)) + 39))<(50 -(1708 -(1080 + 612))))) then while true do if (((4422 -2670)<(3549 + 328)) and (v135==0)) then v136=v86[2];v84[v136](v12(v84,v136 + (2 -1),v86[(996 -(333 + 652)) -8]));break;end end break;end if ((3020==((40102 -26376) -(12341 -(204 + 1431)))) and (v134==(355 -(53 + 302)))) then v135=0 -0;v136=nil;v134=1;end end break;end end elseif (((1988 + 2111)<=(6276 -(923 + 365))) and (v87==(1736 -(949 + 779)))) then local v152=0;local v153;local v154;local v155;while true do if ((v152==(0 -0)) or ((677 + 479)>(5785 -3980))) then v153=0 -0;v154=nil;v152=1322 -(115 + 1206);end if ((v152==1) or (599>=(1977 + 1828))) then v155=nil;while true do if (((446 + 130)<(5182 -(81 + 706))) and (v153==0)) then local v187=(1398 + 249) -(1511 + 136);while true do if (((9912 -6063)>=(2378 -(32 + 30))) and (v187==(1596 -((1138 -821) + 1279)))) then v154=v86[642 -(280 + 360)];v155=v84[v86[964 -(597 + 364)]];v187=1 + 0;end if (((33 + 370)<((5133 -(20 + 321)) -(723 + 465))) and (v187==(1 + 0 + 0))) then v153=1860 -(199 + 1660);break;end end end if ((v153==(1 + 0)) or ((1529 -(247 + 189))==4408)) then v84[v154 + (609 -(578 + 30))]=v155;v84[v154]=v155[v86[4]];break;end end break;end end else v71=v86[6 -3];end elseif (((4977 -(400 + 344 + 40))==(6004 -(133 + 1678))) and (v87<=14)) then if ((v87<=11) or ((2506 -(620 + 708))>=(9894 -6120))) then if (((851 + 980)==(4743 -2912)) and (v87>(559 -(440 + 109)))) then local v137=1503 -(464 + 1039);local v138;local v139;local v140;while true do if ((v137==(780 -(387 + 393))) or ((6647 -(1047 + 836))<=(9218 -5027))) then local v161=0;while true do if (((1104 -(1182 -475))<=(2419 -(1141 + 245))) and ((0 -0)==v161)) then v138=v79[v86[3 + 0]];v139=nil;v161=1;end if ((v161==(2 -1)) or (497==(102 + 274))) then v137=1;break;end end end if (((1541 + 3122 + 333)>1968) and (v137==(1 -0))) then local v162=0 -0;while true do if ((v162==((264 + 1292) -(1495 + 61))) or (4645<(3925 -(737 + 133)))) then v140={};v139=v9({},{__index=function(v181,v182)local v190=0;local v191;while true do if ((1636<(5708 -2994)) and (v190==0)) then local v203=0 + 0;while true do if (((0 -0)==v203) or ((1860 -437)>(4778 -2962))) then v191=v140[v182];return v191[1 -(1123 -(781 + 342))][v191[2 + 0]];end end end end end,__newindex=function(v183,v184,v185)local v192=1515 -(241 + 1274);local v193;local v194;local v195;while true do if (((3146 -2040)==(2369 -(16 + 1247))) and (v192==0)) then v193=0;v194=nil;v192=678 -(595 + 82);end if (((2 -(1 + 0))==v192) or ((313 + 2263)<=(3678 -((1930 -958) + 401)))) then v195=nil;while true do if ((777==777) and (v193==(1236 -((468 -272) + 813 + 227)))) then local v210=0 + 0;while true do if (((1234 -(208 + 108))>(2704 -(1255 + 607))) and (v210==(0 + 0))) then v194=0 + 0;v195=nil;v210=2 -1;end if (((3 -2)==v210) or ((3663 -2400)>=(6413 -(808 + 704)))) then v193=1 + 0;break;end end end if (((1251 + 194)>=(866 -350)) and (v193==(1 + 0))) then while true do if (((1674 -(391 + 1283))==v194) or ((2695 + 616)<(1 + 57))) then v195=v140[v184];v195[1090 -(35 + 1054)][v195[4 -2]]=v185;break;end end break;end end break;end end end});v162=1 -0;end if (((1051 -(863 + (270 -83)))==v162) or ((5089 -(680 + 1303))<=(2117 -(446 + 38 + 226)))) then v137=546 -(510 + 34);break;end end end if ((v137==(1257 -(940 + 315))) or ((1456 -(33 + 74))>=(3667 -(99 + 427)))) then for v169=1 + 0,v86[2 + 2] do local v170=0;local v171;local v172;while true do if ((v170==1) or ((3327 -(9 + 46 + 377))>=(302 + 3757))) then while true do if ((v171==(1 + 0)) or (((4520 -(1705 + 101)) + 1954)<(458 -331))) then if ((v172[3 -2]==(23 -7)) or ((490 -(261 + 14))>=(1020 + 216))) then v140[v169-((1553 -1226) -(281 + (1310 -(485 + 780))))]={v84,v172[1283 -(290 + 990)]};else v140[v169-(1806 -(155 + 1650))]={v35,v172[5 -2]};end v83[ #v83 + (1924 -(1503 + 420))]=v140;break;end if ((1033<(1307 + 3309)) and (v171==(0 -(0 + 0)))) then local v200=1208 -(594 + 446 + 168);local v201;while true do if (((3425 + (997 -(34 + 701)))>=((3291 -1948) + 709)) and (v200==(1144 -(252 + 47 + (1762 -(411 + 506)))))) then v201=(682 + 223) -((405 -(229 + 35)) + (781 -(7 + 10)));while true do if (((0 -0)==v201) or ((1719 + 3155)<((7701 -(506 + 475)) -4820))) then local v213=0 + 0;while true do if (((1 + 0)==v213) or ((6830 -4208)>=(294 + 2506))) then v201=1 + 0;break;end if ((v213==(0 + 0)) or ((1125 + (2155 -1181))>(5288 -(1419 + (75 -15))))) then v71=v71 + 1;v172=v77[v71];v213=1 + 0;end end end if (((1 + 0)==v201) or (2601>(267 + 3210))) then v171=634 -(165 + 468);break;end end break;end end end end break;end if ((4818>3295) and ((0 -0)==v170)) then local v186=0 + 0;while true do if (((3496 -(74 + 144))<(15015 -10184)) and ((1 + 0)==v186)) then v170=1 -0;break;end if (((889 -474)<=1651) and ((1327 -(1074 + 253))==v186)) then v171=0;v172=nil;v186=216 -(19 + 196);end end end end end v84[v86[1574 -(1441 + 131)]]=v28(v138,v139,v36);break;end end else v84[v86[(315 -(165 + 145)) -3]]=v36[v86[4 -1]];end elseif (((20209 -15974)>(261 + 1944)) and (v87<=12)) then local v142=0 -0;local v143;while true do if ((3602<=(5469 -(1370 + (1584 -(878 + 304))))) and (0==v142)) then v143=v86[2 + 0];v84[v143]=v84[v143](v12(v84,v143 + (723 -(366 + 356)),v86[3]));break;end end elseif ((v87==(2 + 11)) or (2232==(8427 -(650 + 3602)))) then for v165=v86[2],v86[319 -(154 + 162)] do v84[v165]=nil;end else v84[v86[2]]=v84[v86[666 -(5 + (831 -173))]][v86[18 -14]];end elseif (((5812 -2105)<(2384 + 2105)) and (v87<=(1989 -(644 + 1328)))) then if ((v87<=(1870 -(1064 + 791))) or ((497 + 739)>=(2962 -(395 + 377)))) then if (((4550 -(122 + 16))>=(2090 + (3380 -1742))) and (v84[v86[3 -1]]==v86[4])) then v71=v71 + (2 -1);else v71=v86[1 + 2];end elseif ((v87==16) or ((14811 -11616)>=(3480 -(153 + 106)))) then v84[v86[522 -(122 + 398)]]=v84[v86[7 -4]];else v84[v86[2]]=v86[3];end elseif ((v87<=18) or ((1008 + 119)>=(2322 + 1623))) then local v144=0;local v145;while true do if ((v144==0) or ((2430 -579)<=((1946 -990) -236))) then v145=v86[6 -4];v84[v145]=v84[v145](v84[v145 + 1]);break;end end elseif ((102==102) and (v87>(8 + (21 -10)))) then v84[v86[2 + 0]][v86[1049 -(782 + (598 -334))]]=v86[1900 -(1122 + 774)];else v84[v86[1 + 1]][v86[3 -0]]=v84[v86[15 -11]];end v71=v71 + 1;break;end end break;end end break;end if (((4262 -(862 + 872))==((2699 + 1791) -((671 -436) + 1727))) and (v91==(0 + 0))) then v92=0;v93=nil;v91=728 -(369 + 358);end end end end A,B=v26(v10(v75));if  not A[1] then local v88=0;local v89;while true do if (0==v88) then v89=v34[4][v71] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end end end return v28(v27(),{},v16)();end vv8());end
